// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// vec_at_id_fast
arma::vec vec_at_id_fast(const arma::mat& v);
RcppExport SEXP _riemtan_vec_at_id_fast(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(vec_at_id_fast(v));
    return rcpp_result_gen;
END_RCPP
}
// similarity_transform
arma::mat similarity_transform(const arma::mat& A, const arma::mat& X);
RcppExport SEXP _riemtan_similarity_transform(SEXP ASEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(similarity_transform(A, X));
    return rcpp_result_gen;
END_RCPP
}
// symmpart_fast
arma::mat symmpart_fast(const arma::mat& A);
RcppExport SEXP _riemtan_symmpart_fast(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(symmpart_fast(A));
    return rcpp_result_gen;
END_RCPP
}
// safe_logm_cpp
arma::mat safe_logm_cpp(const arma::mat& X);
RcppExport SEXP _riemtan_safe_logm_cpp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(safe_logm_cpp(X));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_riemtan_vec_at_id_fast", (DL_FUNC) &_riemtan_vec_at_id_fast, 1},
    {"_riemtan_similarity_transform", (DL_FUNC) &_riemtan_similarity_transform, 2},
    {"_riemtan_symmpart_fast", (DL_FUNC) &_riemtan_symmpart_fast, 1},
    {"_riemtan_safe_logm_cpp", (DL_FUNC) &_riemtan_safe_logm_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_riemtan(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
